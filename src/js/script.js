'use strict';

const someFunc = () => {
  for (let i = 0; i < 3; i++) {
    var text1 = 'text with var';
    let text2 = 'text with let';
    const text3 = 'text with const';

    console.log(`${text1}, ${text2}, ${text3}`);
  }

  console.log(text1);// Обьявлена через var и имеет функциональную либо глобальную область видимости.
  // Значит видна в пределах всей функции. При использовании var поднимается на начало области видимости
  console.log(text2);// Переменная обьявленная через let, в данном случае имеет блочную область
                     // видимости и видна только внутри блока, в котором была объявлена. Хостинг доступен, но в блочной области видимости.
                     // До обьявления переменная не доступна и попадает в Temporal Dead Zone.
                     // В результате будет ошибка Reference error
  console.log(text3); // Переменная обьявленная через const в данном случае имеет блочную область
                      // видимости и видна только внутри блока, в котором была объявлена. Хостинг доступен, но в блочной области видимости
                      // До обьявления переменная не доступна и попадает в Temporal Dead Zone.
                       // В результате будет ошибка Reference error
};


someFunc();
